Dada uma máquina que execute uma sequência de n tarefas. Cada tarefa tem um tempo de execução e um deadline

. É desejável que todas as tarefas sejam finalizadas sem atrasos, mas nem sempre isso é possível. Uma alternativa para compensar possíveis atrasos, seria a execução de tarefas que terminam antes do tempo e aproveitar esse saldo para executar as outras tarefas. No final da execução de todas as tarefas, se o saldo de tempo (deadline - tempo de execução acumulado) for maior igual a zero, então o atraso é igual a zero. Caso o saldo de tempo seja negativo, então o atraso é equivalente ao módulo desse saldo (nesse problema, basta multiplicar o saldo por -1). Desse, o objetivo seria encontrar uma sequência de atividades que minimize o atraso.

Implemente uma função que receba um vetor de atividades de tamanho n. A função deverá imprimir a sequência ótima de atividades que foram executados até ou antes do deadline e retornar o valor do atraso.

Sugestão de estrutura para a representação do problema:

typedef struct{
    int id; // identificador da tarefa, que será a i-ésima tarefa lida
    int e; // tempo de execução
    int d; // deadline
}

Input Format

Na primeira linha, dever lido o valor de n, que é a quantidade de tarefas.

Nas n seguintes linhas devem ser lidos, em sequência, o tempo de execução e o deadline da i-ésima tarefa.

Constraints

.

Output Format

Na primeira linha deve ser impressa a sequência ótima de atividades executadas sem atraso.

Na segunda linha deve ser impressa o atraso total.

Sample Input 0

4
5 3
4 5
3 11
6 12

Sample Output 0

2 3 1 0
0

Sample Input 1

10
1 7
8 5
9 2
7 6
3 2
1 4
10 8
4 6
1 1
2 1

Sample Output 1

0 5 7 8 3 4 9 6 1 2
4

