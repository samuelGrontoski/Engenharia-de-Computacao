Implemente uma função que receba 3 listas estáticas (l1, l2, l3). A função deve concatenar l1 e l2, de forma que ambas sejam invertidas, em l3. Durante a concatenação, as listas l1 e l2 devem ser esvaziadas.

Exemplo:

Antes

l1 = {1, 2, 3}

l2 = {4, 5, 6, 7}

l3 = {}

Depois

l1 = {}

l2 = {}

l3 = {3, 2, 1, 7, 6, 5, 4}

Para isso utilize um TAD do tipo Lista, podendo ser o código que foi apresentado em aula (esse código pode ser copiado ):

#define MAX_SIZE 100

typedef struct ItemL ItemL;
typedef struct Lista Lista;

Lista* criar_lista();

int lista_vazia(Lista *l);

int lista_cheia(Lista *l);

int inserir(Lista *l, int chave);

int remover(Lista *l, int chave);

void imprimir_lista(Lista *l);

int liberar_lista(Lista *l);
Dica: implemente uma função para remover o último elemento. Essa função facilitará a implementação do exercício proposto.

Observação: não é necessário considerar o arquivo .h, já que no HackerRank não tem como "upar" arquivos .h e .c.

Input Format

Na primeira linha, enquanto "-1" não for lido, ler números inteiros. Na segunda linha, a mesma restrição da primeira linha deve ser aplicada.

Constraints

.

Output Format

Imprimir a lista concatenada.

Sample Input 0

1 2 3 -1
4 5 6 7 -1
Sample Output 0

3 2 1 7 6 5 4